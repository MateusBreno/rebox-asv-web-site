{
  "env": {
    "browser": true,
    "es2021": true,
    "node": true
  },

  "extends": [
    "plugin:react/recommended",
    "airbnb-base",
    "plugin:@typescript-eslint/recommended",
    "prettier/@typescript-eslint",
    "plugin:prettier/recommended"
  ],

  "globals": {
    "Atomics": "readonly",
    "SharedArrayBuffer": "readonly"
  },

  "parser": "@typescript-eslint/parser",

  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": 12,
    "sourceType": "module"
  },

  //Add todos os puglins que deseja integrar ao ESLint
  "plugins": [
    "react",
    "react-hooks",
    "@typescript-eslint",
    "prettier",
    "eslint-plugin-import-helpers"
  ],

  "rules": {
    "no-console": "off",
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "warn",
    "react/jsx-filename-extension": [1, { "extensions": [".tsx"] }],
    "import/prefer-default-export": "off",
    "camelcase": "off",
    "no-plusplus": "off",
    "react-hooks/rules-of-hooks": "off",

    "no-unused-expressions": "off",
    "no-useless-escape": "off",
    "no-param-reassign": "off",

    "no-restricted-syntax": "off",

    "@typescript-eslint/no-explicit-any": ["off"],
    // Tirar o alerta de erros por falta de 'importar React' nos arquivos
    "react/react-in-jsx-scope": "off",

    // Corrige o erro de ter que add a extensão do arquivo na hora da importação
    // Ex: import routes from './routes/index' ao invés de './routes/index.ts'
    "import/extensions": [
      "error",
      "ignorePackages",
      {
        "ts": "never",
        "tsx": "never"
      }
    ],

    //Faz com que o editor de código reclame ao ferir as configs do prettier
    "prettier/prettier": "error",
    "no-use-before-define": "off",
    "no-nested-ternary": "off",
    "no-empty": "off",

    // Faz com que o eslint pare reclamar da tipagem do children
    "react/prop-types": "off",

    // Faz com que organize os imports por ordem alfabética import {A, B, C, D, E} from './styles'
    // "sort-imports": ["error", { "ignoreDeclarationSort": true }],

    // Faz com que organize os imports pela ordem que eu quiser.
    "import-helpers/order-imports": [
      "warn",
      {
        "newlinesBetween": "always",
        "groups": [
          ["/^react$/", "/^react-native$/"],
          "module",
          [
            "/^@assets/",
            "/^@components/",
            "/^@config/",
            "/^@hooks/",
            "/^@locales/",
            "/^@pages/",
            "/^@routes/",
            "/^@services/",
            "/^@styles/",
            "/^@utils/",
            "/^@models/"
          ],
          ["parent", "sibling", "index"],
          ["/./styles/"]
        ],
        "alphabetize": {
          "order": "asc",
          "ignoreCase": true
        }
      }
    ]
  },

  "settings": {
    // Resolve o erro de importação 'Import/no-unresolved' no TS
    "import/resolver": {
      "typescript": {},
      "babel-plugin-root-import": {
        "paths": [
          {
            "rootPathSuffix": "src"
          },
          {
            "rootPathPrefix": "@assets/",
            "rootPathSuffix": "src/assets/"
          },
          {
            "rootPathPrefix": "@components/",
            "rootPathSuffix": "src/components"
          },
          {
            "rootPathPrefix": "@config/",
            "rootPathSuffix": "src/config"
          },
          {
            "rootPathPrefix": "@hooks/",
            "rootPathSuffix": "src/hooks"
          },
          {
            "rootPathPrefix": "@locales/",
            "rootPathSuffix": "src/locales"
          },
          {
            "rootPathPrefix": "@pages/",
            "rootPathSuffix": "src/pages"
          },
          {
            "rootPathPrefix": "@routes/",
            "rootPathSuffix": "src/routes"
          },
          {
            "rootPathPrefix": "@services/",
            "rootPathSuffix": "src/services"
          },
          {
            "rootPathPrefix": "@styles/",
            "rootPathSuffix": "src/styles"
          },
          {
            "rootPathPrefix": "@utils/",
            "rootPathSuffix": "src/utils"
          },
          {
            "rootPathPrefix": "@models/",
            "rootPathSuffix": "src/models"
          }
        ]
      }
    }
  }
}
